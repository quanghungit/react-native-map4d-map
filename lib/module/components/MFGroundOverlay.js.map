{"version":3,"names":["PropTypes","React","requireNativeComponent","View","ViewPropTypes","viewPropTypes","propTypes","urlTemplate","string","isRequired","bounds","shape","northEast","latitude","number","longitude","southWest","override","bool","visible","zIndex","MFGroundOverlay","Component","render","props","RMFGroundOverlay"],"sources":["MFGroundOverlay.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport React from 'react';\nimport {\n  requireNativeComponent,\n  View,\n  ViewPropTypes,\n} from 'react-native';\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * The url template of the tile server. The patterns {x} {y} {z} will be replaced at runtime\n   * For example, https://tile.openstreetmap.de/{z}/{x}/{y}.png\n   */\n  urlTemplate: PropTypes.string.isRequired,\n\n  /**\n   * A region will be display ground overlay.\n   */\n   bounds: PropTypes.shape({\n    northEast: PropTypes.shape({\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n    }).isRequired,\n    southWest: PropTypes.shape({\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n    }).isRequired\n   }),\n\n  /**\n   * If `true` the ground overlay will override base map. All object of base map at this\n   * position will not display. The default value is false. \n   */\n  override: PropTypes.bool,\n\n  /**\n   * visible\n   */\n  visible: PropTypes.bool,\n\n  /**\n   * The order in which this ground overlay is drawn with respect to other overlays. An overlay\n   * with a larger z-index is drawn over overlays with smaller z-indices. The order of overlays\n   * with the same z-index is arbitrary. The default zIndex is 0.\n   */\n  zIndex: PropTypes.number,\n};\n\nclass MFGroundOverlay extends React.Component {\n  render() {\n    return <RMFGroundOverlay\n      {...this.props}\n    />;\n  }\n}\n\nMFGroundOverlay.propTypes = propTypes;\n\nvar RMFGroundOverlay = requireNativeComponent(`RMFGroundOverlay`, MFGroundOverlay);\n\nexport { MFGroundOverlay }\n"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,sBADF,EAEEC,IAFF,EAGEC,aAHF,QAIO,cAJP,C,CAMA;;AACA,MAAMC,aAAa,GAAGD,aAAa,IAAID,IAAI,CAACG,SAA5C;AACA,MAAMA,SAAS,GAAG,EAChB,GAAGD,aADa;;EAGhB;AACF;AACA;AACA;EACEE,WAAW,EAAEP,SAAS,CAACQ,MAAV,CAAiBC,UAPd;;EAShB;AACF;AACA;EACGC,MAAM,EAAEV,SAAS,CAACW,KAAV,CAAgB;IACvBC,SAAS,EAAEZ,SAAS,CAACW,KAAV,CAAgB;MACzBE,QAAQ,EAAEb,SAAS,CAACc,MAAV,CAAiBL,UADF;MAEzBM,SAAS,EAAEf,SAAS,CAACc,MAAV,CAAiBL;IAFH,CAAhB,EAGRA,UAJoB;IAKvBO,SAAS,EAAEhB,SAAS,CAACW,KAAV,CAAgB;MACzBE,QAAQ,EAAEb,SAAS,CAACc,MAAV,CAAiBL,UADF;MAEzBM,SAAS,EAAEf,SAAS,CAACc,MAAV,CAAiBL;IAFH,CAAhB,EAGRA;EARoB,CAAhB,CAZO;;EAuBhB;AACF;AACA;AACA;EACEQ,QAAQ,EAAEjB,SAAS,CAACkB,IA3BJ;;EA6BhB;AACF;AACA;EACEC,OAAO,EAAEnB,SAAS,CAACkB,IAhCH;;EAkChB;AACF;AACA;AACA;AACA;EACEE,MAAM,EAAEpB,SAAS,CAACc;AAvCF,CAAlB;;AA0CA,MAAMO,eAAN,SAA8BpB,KAAK,CAACqB,SAApC,CAA8C;EAC5CC,MAAM,GAAG;IACP,oBAAO,oBAAC,gBAAD,EACD,KAAKC,KADJ,CAAP;EAGD;;AAL2C;;AAQ9CH,eAAe,CAACf,SAAhB,GAA4BA,SAA5B;AAEA,IAAImB,gBAAgB,GAAGvB,sBAAsB,CAAE,kBAAF,EAAqBmB,eAArB,CAA7C;AAEA,SAASA,eAAT"}