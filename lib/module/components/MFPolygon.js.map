{"version":3,"names":["React","PropTypes","requireNativeComponent","Platform","NativeModules","ViewPropTypes","ColorPropType","findNodeHandle","processColor","viewPropTypes","View","propTypes","coordinates","arrayOf","shape","latitude","number","isRequired","longitude","holes","fillColor","strokeColor","strokeWidth","zIndex","visible","bool","userData","object","onPress","func","MFPolygon","Component","constructor","props","_onPress","bind","_ref","event","stopPropagation","ref","polygon","setCoordinates","_runCommand","setHoles","setFillColor","color","setStrokeColor","setStrokeWidth","width","setVisible","setZIndex","touchable","setUserData","_getHandle","name","args","OS","UIManager","dispatchViewManagerCommand","_uiManagerCommand","_mapManagerCommand","componentName","getViewManagerConfig","Commands","render","RMFPolygon"],"sources":["MFPolygon.js"],"sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  requireNativeComponent,\n  Platform,\n  NativeModules,\n  ViewPropTypes,\n  ColorPropType,\n  findNodeHandle,\n  processColor\n} from 'react-native';\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * An array of coordinates to describe the polygon\n   */\n  coordinates: PropTypes.arrayOf(\n    PropTypes.shape({\n      /**\n       * Latitude/Longitude coordinates\n       */\n      latitude: PropTypes.number.isRequired,\n      longitude: PropTypes.number.isRequired,\n    })\n  ),\n\n  /**\n   * An array of array of coordinates to describe the polygon holes\n   */\n  holes: PropTypes.arrayOf(\n    PropTypes.arrayOf(\n      PropTypes.shape({\n        /**\n         * Latitude/Longitude coordinates\n         */\n        latitude: PropTypes.number.isRequired,\n        longitude: PropTypes.number.isRequired,\n      })\n    )\n  ),\n\n  /**\n   * The color to use for the polygon.\n   */\n  fillColor: ColorPropType,\n\n  /**\n   * The color to use for the polygon stroke.\n   */\n  strokeColor: ColorPropType,\n\n  /**\n   * The stroke width to use for the polygon.\n   */\n  strokeWidth: PropTypes.number,\n\n  /**\n   * zIndex\n   */\n  zIndex: PropTypes.number,\n\n  /**\n   * visible\n   */\n  visible: PropTypes.bool,\n\n  /**\n   * userData\n   */\n  userData:PropTypes.object,\n\n  /**\n   * Callback that is called when the user presses on the polygon\n   */\n  onPress: PropTypes.func,\n};\n\n\nclass MFPolygon extends React.Component {\n  constructor(props) {\n    super(props);\n    this._onPress = this._onPress.bind(this)\n    this._ref = this._ref.bind(this)\n  }\n\n  _onPress(event) {\n    event.stopPropagation();\n      if (this.props.onPress) {\n        this.props.onPress(event);\n    }\n  }\n\n  _ref(ref) {\n    this.polygon = ref;\n  }\n\n  setCoordinates(coordinates) {\n    this._runCommand(\"setCoordinates\", [coordinates])\n  }\n\n  setHoles(holes) {\n    this._runCommand(\"setHoles\", [holes])\n  }\n\n  setFillColor(color) {\n    this._runCommand(\"setFillColor\", [processColor(color)])\n  }\n\n  setStrokeColor(color) {\n    this._runCommand(\"setStrokeColor\", [processColor(color)])\n  }\n\n  setStrokeWidth(width) {\n    this._runCommand(\"setStrokeWidth\", [width])\n  }\n\n  setVisible(visible) {\n    this._runCommand(\"setVisible\", [visible])\n  }\n\n  setZIndex(zIndex) {\n    this._runCommand(\"setZIndex\", [touchable])\n  }\n\n  setUserData(userData) {\n    this._runCommand(\"setUserData\", [userData])\n  }\n\n  _getHandle() {\n    return findNodeHandle(this.polygon);\n  }\n\n  _runCommand(name, args) {\n    switch (Platform.OS) {\n      case 'android':\n        NativeModules.UIManager.dispatchViewManagerCommand(\n          this._getHandle(),\n          this._uiManagerCommand(name),\n          args\n        );\n        break;\n\n      case 'ios':\n        this._mapManagerCommand(name)(this._getHandle(), ...args);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  _uiManagerCommand(name) {\n    const UIManager = NativeModules.UIManager;\n    const componentName = \"RMFPolygon\";\n\n    if (!UIManager.getViewManagerConfig) {\n      // RN < 0.58\n      return UIManager[componentName].Commands[name];\n    }\n\n    // RN >= 0.58        \n    return UIManager.getViewManagerConfig(componentName).Commands[name];\n  }\n\n  _mapManagerCommand(name) {\n    return NativeModules[`RMFPolygon`][name];\n  }\n\n  render() {\n    return <RMFPolygon\n      {...this.props}\n      ref={this._ref}\n      onPress={this._onPress}\n    />;\n  }\n}\n\nMFPolygon.propTypes = propTypes;\n\nvar RMFPolygon = requireNativeComponent(`RMFPolygon`, MFPolygon);\n\nexport { MFPolygon }\n"],"mappings":"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"}