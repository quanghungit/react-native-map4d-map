{"version":3,"names":["CameraShape","PropTypes","shape","target","latitude","number","isRequired","longitude","zoom","bearing","tilt","viewPropTypes","ViewPropTypes","View","propTypes","showsMyLocationButton","bool","showsMyLocation","showsBuildings","showsPOIs","zoomGesturesEnabled","scrollGesturesEnabled","rotateGesturesEnabled","tiltGesturesEnabled","camera","mapType","oneOf","onMapReady","func","onPress","onPoiPress","onBuildingPress","onPlacePress","onModeChange","onCameraMove","onCameraMoveStart","onCameraIdle","onMyLocationButtonPress","onShouldChangeMapMode","onReachLimitedZoom","MFMapView","React","Component","constructor","props","state","isReady","Platform","OS","_onMapReady","bind","_ref","setState","ref","map","getCamera","NativeModules","Map4dMap","_getHandle","_runCommand","Promise","reject","getBounds","getMyLocation","animateCamera","moveCamera","enable3DMode","enable","console","warn","is3DMode","setMyLocationEnabled","setPOIsEnabled","setZoomGesturesEnabled","setScrollGesturesEnabled","setRotateGesturesEnabled","setTiltGesturesEnabled","setAllGesturesEnabled","setTime","time","t","Date","parse","isNaN","log","fitBounds","boundsData","cameraForBounds","pointForCoordinate","coordinate","coordinateForPoint","point","findNodeHandle","name","args","UIManager","dispatchViewManagerCommand","_uiManagerCommand","_mapManagerCommand","componentName","getViewManagerConfig","Commands","render","style","RMFMapView","requireNativeComponent"],"sources":["MFMapView.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\nimport {\n  requireNativeComponent,\n  Platform,\n  NativeModules,\n  ViewPropTypes,\n  ColorPropType,\n  findNodeHandle\n} from 'react-native';\n\nconst CameraShape = PropTypes.shape({\n  target: PropTypes.shape({\n    latitude: PropTypes.number.isRequired,\n    longitude: PropTypes.number.isRequired,\n  }),\n  zoom: PropTypes.number.isRequired,\n  bearing: PropTypes.number.isRequired,\n  tilt: PropTypes.number.isRequired,\n});\n\n// if ViewPropTypes is not defined fall back to View.propType (to support RN < 0.44)\nconst viewPropTypes = ViewPropTypes || View.propTypes;\n\nconst propTypes = {\n  ...viewPropTypes,\n\n  /**\n   * If `false` hide the button to move map to the current user's location.\n   * Default value is `false`.\n   */\n  showsMyLocationButton: PropTypes.bool,\n\n  /**\n   * If `true` the app will ask for the user's location.\n   * Default value is `false`.\n   */\n  showsMyLocation: PropTypes.bool,\n\n  /**\n   * A Boolean indicating whether the map displays buildings.\n   * Default value is `true`.\n   */\n  showsBuildings: PropTypes.bool,\n\n  /**\n   * A Boolean indicating whether the map displays POIs.\n   * Default value is `true`.\n   */\n  showsPOIs: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to zoom the map.\n   * Default value is `true`.\n   */\n  zoomGesturesEnabled: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to scroll the map.\n   * Default value is `true`.\n   */\n  scrollGesturesEnabled: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to pinch/rotate the map.\n   * Default value is `true`.\n   */\n  rotateGesturesEnabled: PropTypes.bool,\n\n  /**\n   * If `false` the user won't be able to tilt the map.\n   * Default value is `true`.\n   */\n  tiltGesturesEnabled: PropTypes.bool,\n\n  /**\n   * The camera view position.\n   */\n  camera: CameraShape,\n\n  /**\n   * Type of map tiles to be rendered.\n   */\n  mapType: PropTypes.oneOf(['roadmap', 'raster', 'satellite', 'map3d']),\n\n  /**\n   * Callback that is called once the map is fully loaded.\n   * @platform android\n   */\n  onMapReady: PropTypes.func,\n\n  /**\n   * Callback that is called when user taps on the map.\n   */\n  onPress: PropTypes.func,\n\n  /**\n   * Callback that is called when user taps on the POIs\n   */\n  onPoiPress: PropTypes.func,\n\n  /**\n   * Callback that is called when user taps on the Buildings\n   */\n  onBuildingPress: PropTypes.func,\n\n  /**\n   * Callback that is called when user taps on the Places\n   */\n  onPlacePress: PropTypes.func,\n\n  /**\n   * @deprecated This prop is no longer support, which is subject to removal in a future versions.\n   */\n  onModeChange: PropTypes.func,\n\n  /**\n   * Callback that is called when moving camera\n   */\n  onCameraMove: PropTypes.func,\n\n  /**\n   * Callback that is called when camera start moving\n   */\n  onCameraMoveStart: PropTypes.func,\n\n  /**\n   * Callback that is called when camera idle\n   */\n  onCameraIdle: PropTypes.func,\n\n  /**\n   * Callback that is called when user taps on location Button\n   */\n  onMyLocationButtonPress: PropTypes.func,\n\n  /**\n   * @deprecated This prop is no longer support, which is subject to removal in a future versions.\n   */\n  onShouldChangeMapMode: PropTypes.func,\n\n  /**\n   * Callback that is called when user zoom in/out reach limited zoom (min/max zoom or zoom at 17 on 3D)\n   */\n  onReachLimitedZoom: PropTypes.func\n};\n\n\nclass MFMapView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isReady: Platform.OS === 'ios',\n    };\n\n    this._onMapReady = this._onMapReady.bind(this);\n    this._ref = this._ref.bind(this);\n  }\n\n  _onMapReady() {\n    const { onMapReady } = this.props;\n    this.setState({ isReady: true }, () => {\n      if (onMapReady) {\n        onMapReady();\n      }\n    });\n  }\n\n  _ref(ref) {\n    this.map = ref;\n  }\n\n  getCamera() {\n    if (Platform.OS === 'android') {\n      return NativeModules.Map4dMap.getCamera(this._getHandle());\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('getCamera', []);\n    }\n    return Promise.reject('Function not supported on this platform');\n  }\n\n  getBounds() {\n    if (Platform.OS === 'android') {\n      return NativeModules.Map4dMap.getBounds(this._getHandle());\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('getBounds', []);\n    }\n    return Promise.reject('Function not supported on this platform');\n  }\n\n  getMyLocation() {\n    if (Platform.OS === 'android') {\n      return NativeModules.Map4dMap.getMyLocation(this._getHandle());\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('getMyLocation', []);\n    }\n    return Promise.reject('Function not supported on this platform');\n  }\n\n  animateCamera(camera) {\n    this._runCommand('animateCamera', [camera]);\n  }\n\n  moveCamera(camera) {\n    this._runCommand('moveCamera', [camera]);\n  }\n\n  enable3DMode(enable) {\n    console.warn(\"This method was intended to set map type map 3D. It has been superseded by 'mapType' property. This method is subject to removal in a future versions.\")\n    this._runCommand('enable3DMode', [enable]);\n  }\n\n  is3DMode() {\n    console.warn(\"This type of mode checking is not recommended. It is recommended that the 'mapType' property be used instead. This method is subject to removal in a future versions.\")\n    if (Platform.OS === 'android') {\n      return NativeModules.Map4dMap.is3DMode(this._getHandle());\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('is3DMode', []);\n    }\n    return Promise.reject('Function not supported on this platform');\n  }\n\n  setMyLocationEnabled(enable) {\n    this._runCommand('setMyLocationEnabled', [enable]);\n  }\n\n  showsMyLocationButton(enable) {\n    this._runCommand('showsMyLocationButton', [enable]);\n  }\n\n  setPOIsEnabled(enable) {\n    this._runCommand('setPOIsEnabled', [enable]);\n  }\n\n  setZoomGesturesEnabled(enable) {\n    this._runCommand('setZoomGesturesEnabled', [enable]);\n  }\n\n  setScrollGesturesEnabled(enable) {\n    this._runCommand('setScrollGesturesEnabled', [enable]);\n  }\n\n  setRotateGesturesEnabled(enable) {\n    this._runCommand('setRotateGesturesEnabled', [enable]);\n  }\n\n  setTiltGesturesEnabled(enable) {\n    this._runCommand('setTiltGesturesEnabled', [enable]);\n  }\n\n  setAllGesturesEnabled(enable) {\n    this._runCommand('setAllGesturesEnabled', [enable]);\n  }\n\n  setTime(time) {\n    let t = Date.parse(time)\n    if (isNaN(t)) {\n      console.log('time invalid')\n    }\n    else {\n      this._runCommand('setTime', [t]);\n    }\n  }\n\n  fitBounds(boundsData) {\n    this._runCommand(\"fitBounds\", [boundsData])\n  }\n\n  cameraForBounds(boundsData) {\n    if (Platform.OS === 'android') {\n      return NativeModules.Map4dMap.cameraForBounds(\n        this._getHandle(),\n        boundsData\n      );\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('cameraForBounds', [boundsData]);\n    }\n    return Promise.reject('cameraForBounds not supported on this platform');\n  }\n\n\n  /**\n   * Convert a map coordinate to screen point\n   *\n   * @param coordinate Coordinate\n   * @param [coordinate.latitude] Latitude\n   * @param [coordinate.longitude] Longitude\n   *\n   * @return Promise Promise with the point ({ x: Number, y: Number })\n   */\n  pointForCoordinate(coordinate) {\n    if (Platform.OS === 'android') {\n      return NativeModules.Map4dMap.pointForCoordinate(\n        this._getHandle(),\n        coordinate\n      );\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('pointForCoordinate', [coordinate]);\n    }\n    return Promise.reject('pointForCoordinate not supported on this platform');\n  }\n\n  /**\n   * Convert a screen point to a map coordinate\n   *\n   * @param point Point\n   * @param [point.x] X\n   * @param [point.x] Y\n   *\n   * @return Promise Promise with the coordinate ({ latitude: Number, longitude: Number })\n   */\n  coordinateForPoint(point) {\n    if (Platform.OS === 'android') {\n      return NativeModules.Map4dMap.coordinateForPoint(\n        this._getHandle(),\n        point\n      );\n    } else if (Platform.OS === 'ios') {\n      return this._runCommand('coordinateForPoint', [point]);\n    }\n    return Promise.reject('coordinateForPoint not supported on this platform');\n  }\n\n  _getHandle() {\n    return findNodeHandle(this.map);\n  }\n\n  _runCommand(name, args) {\n    switch (Platform.OS) {\n      case 'android':\n        return NativeModules.UIManager.dispatchViewManagerCommand(\n          this._getHandle(),\n          this._uiManagerCommand(name),\n          args\n        );\n\n      case 'ios':\n        return this._mapManagerCommand(name)(this._getHandle(), ...args);\n\n      default:\n        return Promise.reject(`Invalid platform was passed: ${Platform.OS}`);\n    }\n  }\n\n  _uiManagerCommand(name) {\n    const UIManager = NativeModules.UIManager;\n    const componentName = \"RMFMapView\";\n\n    if (!UIManager.getViewManagerConfig) {\n      // RN < 0.58\n      return UIManager[componentName].Commands[name];\n    }\n\n    // RN >= 0.58        \n    return UIManager.getViewManagerConfig(componentName).Commands[name];\n  }\n\n  _mapManagerCommand(name) {\n    return NativeModules[`RMFMapView`][name];\n  }\n\n\n  render() {\n    let props;\n\n    if (this.state.isReady) {\n      props = {\n        style: this.props.style,\n        onMapReady: this._onMapReady,\n        ...this.props,\n      };\n    } else {\n      props = {\n        style: this.props.style,\n        onMapReady: this._onMapReady\n      };\n    }\n\n    return <RMFMapView\n      {...props}\n      ref={this._ref}\n    />;\n  }\n}\n\nMFMapView.propTypes = propTypes;\nvar RMFMapView = requireNativeComponent(`RMFMapView`, MFMapView);\n\n\nexport { MFMapView }"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;AASA,MAAMA,WAAW,GAAGC,kBAAA,CAAUC,KAAV,CAAgB;EAClCC,MAAM,EAAEF,kBAAA,CAAUC,KAAV,CAAgB;IACtBE,QAAQ,EAAEH,kBAAA,CAAUI,MAAV,CAAiBC,UADL;IAEtBC,SAAS,EAAEN,kBAAA,CAAUI,MAAV,CAAiBC;EAFN,CAAhB,CAD0B;EAKlCE,IAAI,EAAEP,kBAAA,CAAUI,MAAV,CAAiBC,UALW;EAMlCG,OAAO,EAAER,kBAAA,CAAUI,MAAV,CAAiBC,UANQ;EAOlCI,IAAI,EAAET,kBAAA,CAAUI,MAAV,CAAiBC;AAPW,CAAhB,CAApB,C,CAUA;;;AACA,MAAMK,aAAa,GAAGC,0BAAA,IAAiBC,IAAI,CAACC,SAA5C;AAEA,MAAMA,SAAS,GAAG,EAChB,GAAGH,aADa;;EAGhB;AACF;AACA;AACA;EACEI,qBAAqB,EAAEd,kBAAA,CAAUe,IAPjB;;EAShB;AACF;AACA;AACA;EACEC,eAAe,EAAEhB,kBAAA,CAAUe,IAbX;;EAehB;AACF;AACA;AACA;EACEE,cAAc,EAAEjB,kBAAA,CAAUe,IAnBV;;EAqBhB;AACF;AACA;AACA;EACEG,SAAS,EAAElB,kBAAA,CAAUe,IAzBL;;EA2BhB;AACF;AACA;AACA;EACEI,mBAAmB,EAAEnB,kBAAA,CAAUe,IA/Bf;;EAiChB;AACF;AACA;AACA;EACEK,qBAAqB,EAAEpB,kBAAA,CAAUe,IArCjB;;EAuChB;AACF;AACA;AACA;EACEM,qBAAqB,EAAErB,kBAAA,CAAUe,IA3CjB;;EA6ChB;AACF;AACA;AACA;EACEO,mBAAmB,EAAEtB,kBAAA,CAAUe,IAjDf;;EAmDhB;AACF;AACA;EACEQ,MAAM,EAAExB,WAtDQ;;EAwDhB;AACF;AACA;EACEyB,OAAO,EAAExB,kBAAA,CAAUyB,KAAV,CAAgB,CAAC,SAAD,EAAY,QAAZ,EAAsB,WAAtB,EAAmC,OAAnC,CAAhB,CA3DO;;EA6DhB;AACF;AACA;AACA;EACEC,UAAU,EAAE1B,kBAAA,CAAU2B,IAjEN;;EAmEhB;AACF;AACA;EACEC,OAAO,EAAE5B,kBAAA,CAAU2B,IAtEH;;EAwEhB;AACF;AACA;EACEE,UAAU,EAAE7B,kBAAA,CAAU2B,IA3EN;;EA6EhB;AACF;AACA;EACEG,eAAe,EAAE9B,kBAAA,CAAU2B,IAhFX;;EAkFhB;AACF;AACA;EACEI,YAAY,EAAE/B,kBAAA,CAAU2B,IArFR;;EAuFhB;AACF;AACA;EACEK,YAAY,EAAEhC,kBAAA,CAAU2B,IA1FR;;EA4FhB;AACF;AACA;EACEM,YAAY,EAAEjC,kBAAA,CAAU2B,IA/FR;;EAiGhB;AACF;AACA;EACEO,iBAAiB,EAAElC,kBAAA,CAAU2B,IApGb;;EAsGhB;AACF;AACA;EACEQ,YAAY,EAAEnC,kBAAA,CAAU2B,IAzGR;;EA2GhB;AACF;AACA;EACES,uBAAuB,EAAEpC,kBAAA,CAAU2B,IA9GnB;;EAgHhB;AACF;AACA;EACEU,qBAAqB,EAAErC,kBAAA,CAAU2B,IAnHjB;;EAqHhB;AACF;AACA;EACEW,kBAAkB,EAAEtC,kBAAA,CAAU2B;AAxHd,CAAlB;;AA4HA,MAAMY,SAAN,SAAwBC,cAAA,CAAMC,SAA9B,CAAwC;EACtCC,WAAW,CAACC,KAAD,EAAQ;IACjB,MAAMA,KAAN;IACA,KAAKC,KAAL,GAAa;MACXC,OAAO,EAAEC,qBAAA,CAASC,EAAT,KAAgB;IADd,CAAb;IAIA,KAAKC,WAAL,GAAmB,KAAKA,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAAnB;IACA,KAAKC,IAAL,GAAY,KAAKA,IAAL,CAAUD,IAAV,CAAe,IAAf,CAAZ;EACD;;EAEDD,WAAW,GAAG;IACZ,MAAM;MAAEtB;IAAF,IAAiB,KAAKiB,KAA5B;IACA,KAAKQ,QAAL,CAAc;MAAEN,OAAO,EAAE;IAAX,CAAd,EAAiC,MAAM;MACrC,IAAInB,UAAJ,EAAgB;QACdA,UAAU;MACX;IACF,CAJD;EAKD;;EAEDwB,IAAI,CAACE,GAAD,EAAM;IACR,KAAKC,GAAL,GAAWD,GAAX;EACD;;EAEDE,SAAS,GAAG;IACV,IAAIR,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,OAAOQ,0BAAA,CAAcC,QAAd,CAAuBF,SAAvB,CAAiC,KAAKG,UAAL,EAAjC,CAAP;IACD,CAFD,MAEO,IAAIX,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MAChC,OAAO,KAAKW,WAAL,CAAiB,WAAjB,EAA8B,EAA9B,CAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAe,yCAAf,CAAP;EACD;;EAEDC,SAAS,GAAG;IACV,IAAIf,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,OAAOQ,0BAAA,CAAcC,QAAd,CAAuBK,SAAvB,CAAiC,KAAKJ,UAAL,EAAjC,CAAP;IACD,CAFD,MAEO,IAAIX,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MAChC,OAAO,KAAKW,WAAL,CAAiB,WAAjB,EAA8B,EAA9B,CAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAe,yCAAf,CAAP;EACD;;EAEDE,aAAa,GAAG;IACd,IAAIhB,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,OAAOQ,0BAAA,CAAcC,QAAd,CAAuBM,aAAvB,CAAqC,KAAKL,UAAL,EAArC,CAAP;IACD,CAFD,MAEO,IAAIX,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MAChC,OAAO,KAAKW,WAAL,CAAiB,eAAjB,EAAkC,EAAlC,CAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAe,yCAAf,CAAP;EACD;;EAEDG,aAAa,CAACxC,MAAD,EAAS;IACpB,KAAKmC,WAAL,CAAiB,eAAjB,EAAkC,CAACnC,MAAD,CAAlC;EACD;;EAEDyC,UAAU,CAACzC,MAAD,EAAS;IACjB,KAAKmC,WAAL,CAAiB,YAAjB,EAA+B,CAACnC,MAAD,CAA/B;EACD;;EAED0C,YAAY,CAACC,MAAD,EAAS;IACnBC,OAAO,CAACC,IAAR,CAAa,wJAAb;;IACA,KAAKV,WAAL,CAAiB,cAAjB,EAAiC,CAACQ,MAAD,CAAjC;EACD;;EAEDG,QAAQ,GAAG;IACTF,OAAO,CAACC,IAAR,CAAa,uKAAb;;IACA,IAAItB,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,OAAOQ,0BAAA,CAAcC,QAAd,CAAuBa,QAAvB,CAAgC,KAAKZ,UAAL,EAAhC,CAAP;IACD,CAFD,MAEO,IAAIX,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MAChC,OAAO,KAAKW,WAAL,CAAiB,UAAjB,EAA6B,EAA7B,CAAP;IACD;;IACD,OAAOC,OAAO,CAACC,MAAR,CAAe,yCAAf,CAAP;EACD;;EAEDU,oBAAoB,CAACJ,MAAD,EAAS;IAC3B,KAAKR,WAAL,CAAiB,sBAAjB,EAAyC,CAACQ,MAAD,CAAzC;EACD;;EAEDpD,qBAAqB,CAACoD,MAAD,EAAS;IAC5B,KAAKR,WAAL,CAAiB,uBAAjB,EAA0C,CAACQ,MAAD,CAA1C;EACD;;EAEDK,cAAc,CAACL,MAAD,EAAS;IACrB,KAAKR,WAAL,CAAiB,gBAAjB,EAAmC,CAACQ,MAAD,CAAnC;EACD;;EAEDM,sBAAsB,CAACN,MAAD,EAAS;IAC7B,KAAKR,WAAL,CAAiB,wBAAjB,EAA2C,CAACQ,MAAD,CAA3C;EACD;;EAEDO,wBAAwB,CAACP,MAAD,EAAS;IAC/B,KAAKR,WAAL,CAAiB,0BAAjB,EAA6C,CAACQ,MAAD,CAA7C;EACD;;EAEDQ,wBAAwB,CAACR,MAAD,EAAS;IAC/B,KAAKR,WAAL,CAAiB,0BAAjB,EAA6C,CAACQ,MAAD,CAA7C;EACD;;EAEDS,sBAAsB,CAACT,MAAD,EAAS;IAC7B,KAAKR,WAAL,CAAiB,wBAAjB,EAA2C,CAACQ,MAAD,CAA3C;EACD;;EAEDU,qBAAqB,CAACV,MAAD,EAAS;IAC5B,KAAKR,WAAL,CAAiB,uBAAjB,EAA0C,CAACQ,MAAD,CAA1C;EACD;;EAEDW,OAAO,CAACC,IAAD,EAAO;IACZ,IAAIC,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAR;;IACA,IAAII,KAAK,CAACH,CAAD,CAAT,EAAc;MACZZ,OAAO,CAACgB,GAAR,CAAY,cAAZ;IACD,CAFD,MAGK;MACH,KAAKzB,WAAL,CAAiB,SAAjB,EAA4B,CAACqB,CAAD,CAA5B;IACD;EACF;;EAEDK,SAAS,CAACC,UAAD,EAAa;IACpB,KAAK3B,WAAL,CAAiB,WAAjB,EAA8B,CAAC2B,UAAD,CAA9B;EACD;;EAEDC,eAAe,CAACD,UAAD,EAAa;IAC1B,IAAIvC,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,OAAOQ,0BAAA,CAAcC,QAAd,CAAuB8B,eAAvB,CACL,KAAK7B,UAAL,EADK,EAEL4B,UAFK,CAAP;IAID,CALD,MAKO,IAAIvC,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MAChC,OAAO,KAAKW,WAAL,CAAiB,iBAAjB,EAAoC,CAAC2B,UAAD,CAApC,CAAP;IACD;;IACD,OAAO1B,OAAO,CAACC,MAAR,CAAe,gDAAf,CAAP;EACD;EAGD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE2B,kBAAkB,CAACC,UAAD,EAAa;IAC7B,IAAI1C,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,OAAOQ,0BAAA,CAAcC,QAAd,CAAuB+B,kBAAvB,CACL,KAAK9B,UAAL,EADK,EAEL+B,UAFK,CAAP;IAID,CALD,MAKO,IAAI1C,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MAChC,OAAO,KAAKW,WAAL,CAAiB,oBAAjB,EAAuC,CAAC8B,UAAD,CAAvC,CAAP;IACD;;IACD,OAAO7B,OAAO,CAACC,MAAR,CAAe,mDAAf,CAAP;EACD;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;EACE6B,kBAAkB,CAACC,KAAD,EAAQ;IACxB,IAAI5C,qBAAA,CAASC,EAAT,KAAgB,SAApB,EAA+B;MAC7B,OAAOQ,0BAAA,CAAcC,QAAd,CAAuBiC,kBAAvB,CACL,KAAKhC,UAAL,EADK,EAELiC,KAFK,CAAP;IAID,CALD,MAKO,IAAI5C,qBAAA,CAASC,EAAT,KAAgB,KAApB,EAA2B;MAChC,OAAO,KAAKW,WAAL,CAAiB,oBAAjB,EAAuC,CAACgC,KAAD,CAAvC,CAAP;IACD;;IACD,OAAO/B,OAAO,CAACC,MAAR,CAAe,mDAAf,CAAP;EACD;;EAEDH,UAAU,GAAG;IACX,OAAO,IAAAkC,2BAAA,EAAe,KAAKtC,GAApB,CAAP;EACD;;EAEDK,WAAW,CAACkC,IAAD,EAAOC,IAAP,EAAa;IACtB,QAAQ/C,qBAAA,CAASC,EAAjB;MACE,KAAK,SAAL;QACE,OAAOQ,0BAAA,CAAcuC,SAAd,CAAwBC,0BAAxB,CACL,KAAKtC,UAAL,EADK,EAEL,KAAKuC,iBAAL,CAAuBJ,IAAvB,CAFK,EAGLC,IAHK,CAAP;;MAMF,KAAK,KAAL;QACE,OAAO,KAAKI,kBAAL,CAAwBL,IAAxB,EAA8B,KAAKnC,UAAL,EAA9B,EAAiD,GAAGoC,IAApD,CAAP;;MAEF;QACE,OAAOlC,OAAO,CAACC,MAAR,CAAgB,gCAA+Bd,qBAAA,CAASC,EAAG,EAA3D,CAAP;IAZJ;EAcD;;EAEDiD,iBAAiB,CAACJ,IAAD,EAAO;IACtB,MAAME,SAAS,GAAGvC,0BAAA,CAAcuC,SAAhC;IACA,MAAMI,aAAa,GAAG,YAAtB;;IAEA,IAAI,CAACJ,SAAS,CAACK,oBAAf,EAAqC;MACnC;MACA,OAAOL,SAAS,CAACI,aAAD,CAAT,CAAyBE,QAAzB,CAAkCR,IAAlC,CAAP;IACD,CAPqB,CAStB;;;IACA,OAAOE,SAAS,CAACK,oBAAV,CAA+BD,aAA/B,EAA8CE,QAA9C,CAAuDR,IAAvD,CAAP;EACD;;EAEDK,kBAAkB,CAACL,IAAD,EAAO;IACvB,OAAOrC,0BAAA,CAAe,YAAf,EAA4BqC,IAA5B,CAAP;EACD;;EAGDS,MAAM,GAAG;IACP,IAAI1D,KAAJ;;IAEA,IAAI,KAAKC,KAAL,CAAWC,OAAf,EAAwB;MACtBF,KAAK,GAAG;QACN2D,KAAK,EAAE,KAAK3D,KAAL,CAAW2D,KADZ;QAEN5E,UAAU,EAAE,KAAKsB,WAFX;QAGN,GAAG,KAAKL;MAHF,CAAR;IAKD,CAND,MAMO;MACLA,KAAK,GAAG;QACN2D,KAAK,EAAE,KAAK3D,KAAL,CAAW2D,KADZ;QAEN5E,UAAU,EAAE,KAAKsB;MAFX,CAAR;IAID;;IAED,oBAAO,6BAAC,UAAD,eACDL,KADC;MAEL,GAAG,EAAE,KAAKO;IAFL,GAAP;EAID;;AA1OqC;;;AA6OxCX,SAAS,CAAC1B,SAAV,GAAsBA,SAAtB;AACA,IAAI0F,UAAU,GAAG,IAAAC,mCAAA,EAAwB,YAAxB,EAAqCjE,SAArC,CAAjB"}